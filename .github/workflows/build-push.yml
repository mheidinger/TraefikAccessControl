name: Test & Build & Push

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Build
        run: go build ./cmd/TraefikAccessControl

      - name: Test
        run: go test ./...

  push:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # https://github.com/docker/login-action
      - name: Log into GitHub container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/mheidinger/traefik-access-control:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('ghcr.io/mheidinger/traefik-access-control:{0}', github.ref_name) || null }}
            ${{ startsWith(github.ref, 'refs/tags/') && 'ghcr.io/mheidinger/traefik-access-control:latest' || null }}
          cache-from: type=gha,scope=${{ github.ref_name }}-traefik-access-control
          cache-to: type=gha,mode=max,scope=$${{ github.ref_name }}-traefik-access-control
